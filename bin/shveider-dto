#!/usr/bin/env php
<?php

file_exists(__DIR__ . '/../autoload.php') && ($dir = __DIR__ . '/..') ||
file_exists(__DIR__ . '/../vendor/autoload.php') && ($dir = __DIR__ . '/../vendor') ||
file_exists(__DIR__ . '/../../../autoload.php') && ($dir = __DIR__ . '/../../..');

if (!isset($dir)) {
    echo 'Autoload not found.';
    exit(1);
}

require $dir . '/autoload.php';

if ($argc < 3) {
    echo "Usage: sv-dto 'command' 'path' \n";
    exit(1);
}

$command = $argv[1];

foreach ($argv as $arg) {
    switch (true) {
        case str_starts_with($arg, '--write-to-path='):
            $options['write-to-path'] = trim(substr($arg, strlen('--write-to-path=')));
            break;
        case str_starts_with($arg, '--write-to-namespace='):
            $options['write-to-namespace'] = trim(substr($arg, strlen('--write-to-namespace=')));
            break;
        case $arg === '--minified':
            $options['minified'] = true;
    }
}

$config = new \ShveiderDto\GenerateDTOConfig(
        $argv[2], // as path
            $options['write-to-path'] ?? '',
            $options['write-to-namespace'] ?? '',
            $options['minified'] ?? false,
);

$commandClass = match ($command) {
    'generate-php-doc' => \ShveiderDto\Command\GeneratePhpDocStubCommand::class,
    'generate-traits' => \ShveiderDto\Command\GenerateDtoTraitsCommand::class,
    'list' => 'list',
    default => null,
};

if ($commandClass === 'list' || $commandClass === null) {
    echo "generate-php-doc: Creates php-doc block for your transfer by path\n";
    echo "generate-traits: Creates traits with settings/method for you transfer by path\n";
    exit((int)($commandClass === null));
}

new $commandClass(new \ShveiderDto\ShveiderDtoFactory(), $config);
